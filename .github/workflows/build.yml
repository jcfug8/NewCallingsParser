name: Build and Upload Binary

on:
  push:
    tags:
      - '*' # Matches all tags  

permissions:
  contents: write  # Grant write permissions to create releases

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24.1  # Adjust to your Go version

      # Cross-compile the binary for macOS on ARM64 (Apple Silicon)
      - name: Cross-compile for macOS (Apple Silicon)
        run: |
          GOOS=darwin GOARCH=arm64 go build -o new-callings-parser-mac-arm64
          chmod +x new-callings-parser-mac-arm64
          mkdir test
          mv new-callings-parser-mac-arm64 test/new-callings-parser-mac-arm64
            
      # Cross-compile the binary for macOS on ARM64 (Apple Silicon)
      - name: Listing Files
        run: |
          ls
          ls test
          
      - name: create-dmg-action
        uses: QQxiaoming/create-dmg-action@v0.0.2
        with:
          name: NewCallingsParser.dmg
          srcdir: test
            
      # Cross-compile the binary for macOS on ARM64 (Apple Silicon)
      - name: Listing Files
        run: |
          ls
          ls test
          ls NewCallingsParser.dmg

      # Upload both binaries as artifacts
      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: NewCallingsParser.dmg

      # Create a GitHub Release
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1.1.4
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload the binary as a release asset
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: NewCallingsParser.dmg
          asset_name: NewCallingsParser.dmg
          asset_content_type: application/x-apple-diskimage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}